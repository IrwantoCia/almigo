<div class="container mx-auto p-4 flex flex-col md:flex-row max-h-screen">
  <div class="w-full md:w-1/4 bg-gray-100 p-4 rounded-lg shadow-lg md:mr-4 border-2 border-blue-600 overflow-y-auto max-h-[300px] md:max-h-[700px] min-h-[300px] md:min-h-[700px] mb-4 md:mb-0 sticky top-0">
    <h2 class="text-xl font-bold mb-4 text-blue-600">Chat History</h2>
    <ul id="resource-list" class="space-y-2">
      {{#each data.resourceIDs}}
        <li class="cursor-pointer text-gray-700 hover:text-blue-600 p-2 rounded-lg transition duration-200 {{#if (mod @index 2)}}bg-blue-100{{else}}bg-green-100{{/if}}" onclick="handleResourceClick('{{this}}')">{{this}}</li>
      {{/each}}
    </ul>
  </div>

  <!-- Main Content -->
  <div class="flex-1 flex flex-col h-full">
    <div class="mb-4 hidden">
      <label for="format" class="block text-gray-700 font-semibold mb-2">Format:</label>
      <input type="text" id="format" class="w-full p-2 border border-gray-300 rounded-lg" placeholder="Enter format (e.g., html, json)">
    </div>

    <div id="chat-container" class="bg-gray-900 p-6 rounded-lg shadow-lg mb-4 text-gray-700 prose prose-blue prose-lg max-w-none overflow-y-auto flex-1 min-h-[300px] md:min-h-[600px] max-h-[300px] md:max-h-[600px]">
      {{#if data.chatHistory}}
        {{#each data.chatHistory}}
          {{#if (eq this.role "ai")}}
            <div class="ai-chat">
              {{{this.content}}}
            </div>
          {{else if (eq this.role "human")}}
            <div class="human-chat">
              {{{this.content}}}
            </div>
          {{/if}}
        {{/each}}
      {{/if}}
    </div>

    <div class="flex flex-col md:flex-row items-center mb-4">
      <div class="flex-grow md:mr-4 w-full md:w-auto">
        <label for="prompt" class="block text-gray-700 font-semibold mb-2">Prompt:</label>
        <input type="text" id="prompt" class="w-full p-2 border border-gray-300 rounded-lg" placeholder="Enter your prompt">
        <input type="hidden" id="resourceID" value={{data.resourceID}}>
      </div>
      <button id="ask" class="bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded-lg transition duration-200 mt-4 md:mt-6 w-full md:w-auto">
        Ask
      </button>
    </div>
  </div>
</div>

<script>
  function handlePromptSubmission() {
    const default_format = "output the response in html format. don't need to return full html, just always cover it with main tag .Only output the html without any tag like ```, if the response is code, must wrap in pre tag";
    const chatContainer = document.getElementById('chat-container');
    const prompt = document.getElementById('prompt').value;
    const format = document.getElementById('format').value || default_format;
    const resourceID = document.getElementById('resourceID').value;

    // Add user's prompt to the chat container
    const userPromptElement = document.createElement('div');
    userPromptElement.className = 'human-chat';
    userPromptElement.innerHTML = `${prompt}`;
    chatContainer.appendChild(userPromptElement);

    // Clear the prompt input
    document.getElementById('prompt').value = '';

    // Create the response element first
    const responseElement = document.createElement('div');
    responseElement.className = 'ai-chat';
    chatContainer.appendChild(responseElement);

    // Start the event stream
    startEventStream(prompt, format, resourceID, (content, error, isDone) => {
      if (error) {
        console.error('Error in event stream:', error);
        responseElement.innerHTML += `<span class="text-red-500">Error: ${error}</span>`;
      } else if (isDone) {
        // Handle stream completion
        console.log('Stream completed');
        // Scroll to the end of the response element
        responseElement.scrollTop = responseElement.scrollHeight;
      } else {
        // Append the response content to the response element
        responseElement.innerHTML = content;
        // Scroll to the end of the response element
        chatContainer.scrollTop = chatContainer.scrollHeight;
      }
    });

  }

  function handleResourceClick(resourceID) {
    // Set the resource ID in the hidden input field
    document.getElementById('resourceID').value = resourceID;
    console.log(`Resource ID clicked: ${resourceID}`);
    
    // Reload the page with the resourceID as a query parameter
    window.location.href = window.location.pathname + '?resourceID=' + resourceID;
  }

  document.getElementById('ask').addEventListener('click', handlePromptSubmission);

  document.getElementById('prompt').addEventListener('keypress', function(event) {
    if (event.key === 'Enter') {
      handlePromptSubmission();
    }
  });
</script>
